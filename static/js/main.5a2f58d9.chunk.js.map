{"version":3,"sources":["socket.js","componets/joinRoom.jsx","componets/room.jsx","App.jsx","store/store.js","index.js"],"names":["socket","io","transports","JoinRoom","idRoom","useSelector","state","userName","dispatch","useDispatch","connect","a","axios","post","emit","on","data","type","payload","console","log","className","value","onChange","e","target","placeholder","onClick","Room","users","useState","message","setMessage","messages","setMessages","sendMessage","useEffect","get","then","res","length","map","user","style","width","height","mass","App","isAuth","defaultState","store","createStore","action","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.5a2f58d9.chunk.js","sourcesContent":["import io from \"socket.io-client\";\r\n\r\nconst socket = io('ws://localhost:8080', { transports : ['websocket'] })\r\n\r\nexport default socket;","import React from 'react';\r\nimport axios from 'axios';\r\nimport {useDispatch,useSelector} from 'react-redux'\r\nimport socket from \"../socket\"\r\nconst JoinRoom = () => {\r\n    const idRoom = useSelector(state => state.idRoom)\r\n\r\n    const userName = useSelector(state => state.userName)\r\n\r\n    const dispatch = useDispatch()\r\n\r\n    const connect = async(idRoom,userName) =>{\r\n        try {\r\n            if(idRoom && userName){\r\n                await axios.post('http://localhost:8080/rooms',{idRoom,userName})\r\n                socket.emit('ROOM:JOIN', {idRoom,userName});\r\n                socket.on(\"ROOM:JOINED\",data => dispatch({type:'SET_USERS',payload:data}))\r\n                dispatch({type:'IS_AUTH',payload:true})\r\n                return\r\n            }\r\n        } catch (error) {\r\n            console.log(error);\r\n        }      \r\n    }\r\n\r\n    return (\r\n        <div className=\"join-block\">\r\n            <input type=\"text\" value={idRoom} onChange={e => dispatch({type:'SET_IDROOM',payload:e.target.value})} placeholder=\"Room ID\"/>\r\n            <input type=\"text\" value={userName} onChange={e => dispatch({type:'SET_USERNAME',payload:e.target.value})} placeholder=\"Ваше имя\"/>\r\n            <button onClick={() => connect(idRoom,userName)}>войти</button>\r\n        </div>\r\n    )\r\n}\r\nexport default JoinRoom;","import React,{useState,useEffect} from 'react';\r\nimport {useSelector} from 'react-redux'\r\nimport { Scrollbars } from 'react-custom-scrollbars';\r\nimport socket from \"../socket\"\r\nimport axios from 'axios';\r\nconst Room = () => {\r\n  const idRoom = useSelector(state => state.idRoom)\r\n\r\n  const userName = useSelector(state => state.userName)\r\n\r\n  const users = useSelector(state => state.users)\r\n\r\n  const [message,setMessage] = useState('')\r\n\r\n  const [messages,setMessages] = useState([])\r\n\r\n  const sendMessage = async(message) =>{\r\n    socket.emit('SEND:MESSAGE',{message,idRoom,userName});\r\n    setMessage(message = '')\r\n    socket.on('GET:MESSAGE', data => setMessages(data));\r\n  }\r\n  useEffect(async()=>{\r\n    await axios.get(`http://localhost:8080/rooms/${idRoom}`)\r\n      .then(res => setMessages(res.data.messages))\r\n    socket.on('GET:MESSAGE', data => setMessages(data));\r\n  },[])\r\n    return (\r\n        <div className=\"room\">\r\n          <div className=\"room__conteiner\">\r\n            <div className=\"room__content\">\r\n            <div className=\"room__users__connect\">\r\n              <div className=\"room__users__room-number\">\r\n                Комната: {idRoom}\r\n              </div>\r\n            <div className=\"room__users__number\">\r\n              Онлайн: ({users ? users.length:null})\r\n            </div>\r\n            {users ? users.map(user => <ul className=\"room__users__list\">\r\n              <li className=\"room__user__link\">{user}</li>\r\n            </ul>):null}\r\n          </div>\r\n          <div className=\"room__massanges\">\r\n            <ul className=\"room__massanges__list\">\r\n            <Scrollbars style={{ width: 500, height: 255 }}>\r\n            {messages ? messages.map(mass => \r\n              \r\n              <div className='room__massanges__link'>\r\n           <div className=\"room__massanges__link__message\">{mass.message}</div>\r\n           <span className=\"room__massanges__link__user-name\">{mass.userName}</span>\r\n         </div>)\r\n         :null}\r\n      </Scrollbars>\r\n          \r\n            </ul>\r\n            <div className=\"room__send__massenge\">\r\n              <textarea className=\"room__send__input\" value={message} onChange={e => setMessage(e.target.value)}/>\r\n              <div className=\"room__send__button \" onClick={() => sendMessage(message)}><span>Отправить</span></div>\r\n            </div>\r\n          </div>\r\n            </div>\r\n          \r\n          </div>\r\n          \r\n        </div>\r\n    )\r\n}\r\nexport default Room;","import React from 'react';\nimport {useSelector} from 'react-redux'\nimport JoinRoom from './componets/joinRoom';\nimport Room from './componets/room';\nimport './App.css';\n\nconst App = () => {\n  const isAuth = useSelector(state => state.isAuth);\n  return (\n    <div className=\"app\">\n      {!isAuth ? <JoinRoom ></JoinRoom>: <Room ></Room>}\n    </div>\n  );\n}\n\nexport default App;\n","import { createStore } from 'redux'\r\n\r\nconst defaultState = { isAuth:false, idRoom:null, userName:'',users:null }\r\n\r\nconst reducer = (state = defaultState , action) =>{\r\n    switch(action.type){\r\n        case 'IS_AUTH':\r\n            return{...state, isAuth: action.payload}\r\n        case\"SET_IDROOM\":\r\n            return{...state, idRoom: action.payload}\r\n        case\"SET_USERNAME\":\r\n            return{...state, userName: action.payload}\r\n        case \"SET_USERS\":\r\n            return{...state, users: action.payload}\r\n        default:\r\n            return state\r\n    }\r\n}\r\nlet store = createStore(reducer)\r\n\r\nexport default store;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App.jsx';\nimport store from './store/store.js';\nimport { Provider } from 'react-redux'\n\nReactDOM.render(\n  <Provider store={store}>\n    <App />\n  </Provider>,\ndocument.getElementById('root')\n);\n"],"sourceRoot":""}